<?xml version="1.0" encoding="utf-8"?>
<Defs>
    <IssueDef>
        <defName>Tenancy</defName>
        <label>tenancy</label>
        <iconPath>Icons/TenancyIcon</iconPath>
    </IssueDef>
    
  <HistoryEventDef>
    <defName>TenancyLeave</defName>
    <label>a tenant left</label>
  </HistoryEventDef>
  <HistoryEventDef>
    <defName>TenancyDeath</defName>
    <label>a tenant died</label>
  </HistoryEventDef>
  <HistoryEventDef>
    <defName>TenancyJoin</defName>
    <label>a tenant joined</label>
  </HistoryEventDef>

  <PreceptDef>
    <defName>Tenancy_Encouraged</defName>
    <issue>Tenancy</issue>
    <label>Tenant Hosting Encouraged</label>
    <description>Providing a safe haven for tenants is not only profitable but also considered a humane act.</description>
    <impact>Medium</impact>
    <comps>
      <li Class="PreceptComp_SituationalThought">
        <thought>Tenancy_Encouraged</thought>
        <description>Hosting tenants boosts morale, but the absence of tenants can leave your pawns feeling unfulfilled.</description>
      </li>
      <li Class="PreceptComp_KnowsMemoryThought">
        <eventDef>TenancyLeave</eventDef>
        <thought>TenancyLeave</thought>
      </li>
      <li Class="PreceptComp_KnowsMemoryThought">
        <eventDef>TenancyDeath</eventDef>
        <thought>TenancyDeath</thought>
      </li>
      <li Class="PreceptComp_KnowsMemoryThought">
        <eventDef>TenancyJoin</eventDef>
        <thought>TenancyJoin</thought>
      </li>
    </comps>
  </PreceptDef>

  <ThoughtDef>
    <defName>Tenancy_Encouraged</defName>
    <workerClass>Tenants.ThoughtWorkers.ThoughtWorker_PreceptTenancy</workerClass>
    <developmentalStageFilter>Adult</developmentalStageFilter>
    <doNotApplyToQuestLodgers>true</doNotApplyToQuestLodgers>
    <stages>
      <li>
        <label>Tenant Shortage</label>
        <description>We could be doing more to help others.</description>
        <baseMoodEffect>-2</baseMoodEffect>
      </li>
      <li>
        <label>First Tenant Arrived</label>
        <description>It's a start, but we should welcome more guests.</description>
        <baseMoodEffect>2</baseMoodEffect>
      </li>
      <li>
        <label>Several Tenants</label>
        <description>We are providing for multiple tenants; this is a good start.</description>
        <baseMoodEffect>3</baseMoodEffect>
      </li>
      <li>
        <label>Tenants!</label>
        <description>We are doing our part!</description>
        <baseMoodEffect>5</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>TenancyLeave</defName>
    <thoughtClass>Thought_Memory</thoughtClass>
    <validWhileDespawned>true</validWhileDespawned>
    <durationDays>7</durationDays>
    <nullifyingTraits>
        <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>Tenant Left</label>
        <description>A tenant departed without a wordâ€”what could we have done wrong?</description>
        <baseMoodEffect>-3</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>

  <ThoughtDef>
    <defName>TenancyDeath</defName>
    <thoughtClass>Thought_Memory</thoughtClass>
    <validWhileDespawned>true</validWhileDespawned>
    <durationDays>7</durationDays>
    <nullifyingTraits>
        <li>Bloodlust</li>
        <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>A Tenant Died</label>
        <description>How could this happen?!</description>
        <baseMoodEffect>-6</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>TenancyJoin</defName>
    <thoughtClass>Thought_Memory</thoughtClass>
    <validWhileDespawned>true</validWhileDespawned>
    <durationDays>7</durationDays>
    <nullifyingTraits>
        <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>A Tenant Decided to Join Us</label>
        <description>A tenant has chosen to become a permanent member of our colony. This is a wonderful development!</description>
        <baseMoodEffect>3</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
</Defs>