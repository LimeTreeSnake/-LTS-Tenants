<?xml version="1.0" encoding="utf-8"?>
<Defs>

    <!-- TenancyTimer -->
    <QuestScriptDef>
        <defName>TenancyTimer</defName>
        <root Class="QuestNode_Sequence">
            <nodes>
                <li Class="Tenants.QuestNodes.QuestNode_ContractConclusion">
                    <inSignal>tenants.ContractFinished</inSignal>
                    <outSignal>tenants.ContractReboot</outSignal>
                    <joinSignal>tenants.WannaJoin</joinSignal>
                    <recruitSignal>tenants.TenantRecruited</recruitSignal>
                    <terminateSignal>tenants.ContractTerminated</terminateSignal>
                    <badSignal>tenants.BadEnding</badSignal>
                    <rejectSignal>tenants.Rejected</rejectSignal>
                    <map>$map</map>
                    <contract>$contract</contract>
                </li>
                <li Class="QuestNode_Delay">
                    <delayTicks>$ticks</delayTicks>
                    <reactivatable>true</reactivatable>
                    <inSignalEnable>tenants.ContractReboot</inSignalEnable>
                    <inSignalDisable>tenants.ContractTerminated</inSignalDisable>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label TKey="TenantContractLabel">Tenancy concluded</label>
                                <text TKey="TenantContractText">You have upheld your part of the bargain! A courier should deliver your silver to your Notice Board during their next visit.</text>
                                <lookTargets>$tenants</lookTargets>
                            </li>
                            <li Class="QuestNode_SendSignals">
                                <outSignals>
                                    <li>tenants.ContractFinished</li>
                                </outSignals>
                            </li>
                        </nodes>
                    </node>
                </li>
            </nodes>
        </root>
    </QuestScriptDef>
    <!-- TenancySetup -->
    <QuestScriptDef>
        <defName>TenancySetup</defName>
        <root Class="QuestNode_Sequence">
            <nodes>
                <li Class="QuestNode_GetMap" />
                <li Class="QuestNode_GetWalkInSpot" />
                <li Class="Tenants.QuestNodes.QuestNode_GenerateTenant">
                    <map>$map</map>
                    <tenant>tenant</tenant>
                    <addToList>tenants</addToList>
                    <tenantFaction>tenantFaction</tenantFaction>
                    <race>tenantRace</race>
                    <gender>tenantGender</gender>
                    <rejected>isRejected</rejected>
                </li>
                <li Class="QuestNode_IsNull">
                    <value>$tenant</value>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label>Tenancy</label>
                                <text>Could not find any available tenants.</text>
                            </li>
                            <li Class="QuestNode_End" />
                        </nodes>
                    </node>
                    <!--Tenant Generated-->
                    <elseNode Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="Tenants.QuestNodes.QuestNode_TenancyContract">
                                <map>$map</map>
                                <tenant>$tenant</tenant>
                                <contract>contract</contract>
                                <startdate>startdate</startdate>
                                <endDate>endDate</endDate>
                                <days>days</days>
                                <rent>rent</rent>
                                <ticks>ticks</ticks>
                            </li>
                            <li Class="QuestNode_IsTrue">
                                <value>$isRejected</value>
                                <node Class="QuestNode_Sequence">
                                    <nodes>
                                        <li Class="QuestNode_SendSignals">
                                            <outSignals>
                                                <li>tenants.Rejected</li>
                                            </outSignals>
                                        </li>
                                        <li Class="QuestNode_Letter">
                                            <label>Tenancy rejection</label>
                                            <text>[tenant_nameDef] decided against coming to your colony due to your prior conducts.</text>
                                            <letterDef>NegativeEvent</letterDef>
                                        </li>
                                        <li Class="QuestNode_End" />
                                    </nodes>
                                </node>
                                <elseNode Class="QuestNode_Sequence">
                                    <nodes>
                                        <li Class="QuestNode_SetAllApparelLocked">
                                            <pawns>$tenants</pawns>
                                        </li>
                                        <li Class="QuestNode_WorkDisabled">
                                            <pawns>$tenants</pawns>
                                            <disabledWorkTags>
                                                <li>AllWork</li>
                                            </disabledWorkTags>
                                        </li>
                                        <li Class="Tenants.QuestNodes.QuestNode_TenancyMood">
                                            <contract>$contract</contract>
                                            <thresholdLow>0.25</thresholdLow>
                                            <thresholdHigh>0.75</thresholdHigh>
                                            <node Class="QuestNode_Sequence">
                                                <nodes>
                                                    <li Class="QuestNode_Letter">
                                                        <label TKey="TenantLabelUnhappy">[tenant_nameDef] unhappy!</label>
                                                        <text TKey="TenantTextUnhappy">[tenant_nameDef] seem to think you are a terrible host thus decided to leave without paying.</text>
                                                        <lookTargets>$tenants</lookTargets>
                                                    </li>
                                                    <li Class="QuestNode_SendSignals">
                                                        <outSignals>
                                                            <li>tenants.ExtraFaction</li>
                                                            <li>tenants.LeaveOnCleanup</li>
                                                            <li>tenants.ContractTerminated</li>
                                                        </outSignals>
                                                    </li>
                                                </nodes>
                                            </node>
                                            <elsenode Class="QuestNode_Sequence">
                                                <nodes>
                                                    <li Class="QuestNode_SendSignals">
                                                        <outSignals>
                                                            <li>tenants.WannaJoin</li>
                                                        </outSignals>
                                                    </li>
                                                </nodes>
                                            </elsenode>
                                        </li>
                                        <li Class="QuestNode_ExtraFaction">
                                            <faction>$tenantFaction</faction>
                                            <pawns>$tenants</pawns>
                                            <factionType>HomeFaction</factionType>
                                            <inSignalRemovePawn>tenants.ExtraFaction</inSignalRemovePawn>
                                        </li>
                                        <li Class="QuestNode_LeaveOnCleanup">
                                            <pawns>$tenants</pawns>
                                            <sendStandardLetter>false</sendStandardLetter>
                                            <inSignalRemovePawn>tenants.LeaveOnCleanup</inSignalRemovePawn>
                                        </li>
                                        <li Class="QuestNode_PawnsArrive">
                                            <pawns>$tenants</pawns>
                                            <joinPlayer>true</joinPlayer>
                                            <customLetterLabel TKey="TenantArrivedLabel">Tenant arrived</customLetterLabel>
                                            <customLetterText TKey="TenantArrivedText">A contracted tenant named [tenant_nameDef] have arrived.</customLetterText>
                                        </li>
                                        <li Class="QuestNode_SendSignals">
                                            <outSignals>
                                                <li>tenants.ContractReboot</li>
                                            </outSignals>
                                        </li>
                                    </nodes>
                                </elseNode>
                            </li>
                        </nodes>
                    </elseNode>
                </li>

            </nodes>
        </root>
    </QuestScriptDef>
    <!-- TenancyEndings -->
    <QuestScriptDef>
        <defName>TenancyEnds</defName>
        <root Class="QuestNode_Sequence">
            <nodes>
                <!-- KIA  -->
                <li Class="QuestNode_Signal">
                    <inSignal>tenant.Destroyed</inSignal>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label>Tenant died: {SUBJECT_definite}</label>
                                <text>A tenant died, this is bad news.</text>
                                <letterDef>NegativeEvent</letterDef>
                            </li>
                            <li Class="QuestNode_SendSignals">
                                <outSignals>
                                    <li>tenants.ExtraFaction</li>
                                    <li>tenants.LeaveOnCleanup</li>
                                    <li>tenants.BadEnding</li>
                                </outSignals>
                            </li>
                            <li Class="QuestNode_End">
                                <outcome>Fail</outcome>
                            </li>
                        </nodes>
                    </node>
                </li>
                <!-- Arrested  -->
                <li Class="QuestNode_Signal">
                    <inSignal>tenant.Arrested</inSignal>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label>Tenant captured: {SUBJECT_definite}</label>
                                <text>A tenant have been captured, this is bad news.</text>
                                <letterDef>NegativeEvent</letterDef>
                            </li>
                            <li Class="QuestNode_SendSignals">
                                <outSignals>
                                    <li>tenants.ExtraFaction</li>
                                    <li>tenants.LeaveOnCleanup</li>
                                    <li>tenants.BadEnding</li>
                                </outSignals>
                            </li>
                            <li Class="QuestNode_End">
                                <outcome>Fail</outcome>
                            </li>
                        </nodes>
                    </node>
                </li>
                <!-- Surgery  -->
                <li Class="QuestNode_Signal">
                    <inSignal>tenant.SurgeryViolation</inSignal>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label>Tenant violated: {SUBJECT_definite}</label>
                                <text>A tenant have been violated, how could you?</text>
                                <letterDef>NegativeEvent</letterDef>
                            </li>
                            <li Class="QuestNode_SendSignals">
                                <outSignals>
                                    <li>tenants.ExtraFaction</li>
                                    <li>tenants.LeaveOnCleanup</li>
                                    <li>tenants.BadEnding</li>
                                </outSignals>
                            </li>
                            <li Class="QuestNode_End">
                                <outcome>Fail</outcome>
                            </li>
                        </nodes>
                    </node>
                </li>
                <!-- Left map  -->
                <li Class="QuestNode_Signal">
                    <inSignal>tenant.LeftMap</inSignal>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label>Tenant is gone: {SUBJECT_definite}</label>
                                <text>Where did {SUBJECT_definite} go?</text>
                                <letterDef>NegativeEvent</letterDef>
                            </li>
                            <li Class="QuestNode_End">
                                <outcome>Fail</outcome>
                            </li>
                        </nodes>
                    </node>
                </li>
                <!-- Gone wild  -->
                <li Class="QuestNode_Signal">
                    <inSignal>tenant.RanWild</inSignal>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_Letter">
                                <label>Tenant is wild: {SUBJECT_definite}</label>
                                <text>{SUBJECT_definite} lost their mind.</text>
                                <letterDef>NegativeEvent</letterDef>
                            </li>
                            <li Class="QuestNode_SendSignals">
                                <outSignals>
                                    <li>tenants.ExtraFaction</li>
                                    <li>tenants.LeaveOnCleanup</li>
                                    <li>tenants.BadEnding</li>
                                </outSignals>
                            </li>
                            <li Class="QuestNode_End">
                                <outcome>Fail</outcome>
                            </li>
                        </nodes>
                    </node>
                </li>
                <!-- Recruited  -->
                <li Class="QuestNode_Signal">
                    <inSignal>tenants.TenantRecruited</inSignal>
                    <node Class="QuestNode_Sequence">
                        <nodes>
                            <li Class="QuestNode_SendSignals">
                                <outSignals>
                                    <li>tenants.ExtraFaction</li>
                                </outSignals>
                            </li>
                            <li Class="QuestNode_End">
                                <outcome>Success</outcome>
                            </li>
                        </nodes>
                    </node>
                </li>
                <li Class="QuestNode_Signal">
                    <inSignal>tenants.ContractTerminated</inSignal>
                    <node Class="QuestNode_End">
                        <outcome>Fail</outcome>
                    </node>
                </li>
            </nodes>
        </root>
    </QuestScriptDef>
    <!-- Main Tenancy Quest -->
    <QuestScriptDef>
        <defName>Tenancy</defName>
        <rootSelectionWeight>3</rootSelectionWeight>
        <rootMinPoints>0</rootMinPoints>
        <rootMinProgressScore>3</rootMinProgressScore>
        <expireDaysRange>1.0</expireDaysRange>
        <affectedByPoints>false</affectedByPoints>
        <hideOnCleanup>true</hideOnCleanup>
        <questNameRules>
            <rulesStrings>
                <li>questName->Tenancy for [tenant_nameDef]</li>
                <li>questName->[tenant_nameDef] on vacation</li>
            </rulesStrings>
        </questNameRules>
        <questDescriptionRules>
            <rulesStrings>
                <li>questDescription-></li>
            </rulesStrings>
        </questDescriptionRules>
        <questContentRules>
            <rulesStrings>
                <li>questDescriptionBeforeAccepted->A [tenant_age]-year-old [tenantRace] [tenantGender] named [tenant_nameDef] hail from nearby. \n[tenant_pronoun] wishes to rent a place to stay and is willing to pay [rent] silver per day every [days] days for a total of [rentSum]. \n\n[tenant_nameDef] wont do any work! However, [tenant_pronoun] can be drafted and fight if necessary. \nMistreating and keeping unhappy tenants will give you a bad reputation.</li>
                <li>questDescriptionAfterAccepted->[tenant_nameDef] is a tenant of your colony. \n\n[tenant_pronoun] pays [rent] silver per day every [days] days for a total of [rentSum]. Couriers will occassionaly bring the accumulated rent to your noticeboard if you have one.</li>
                <li>questDescriptionRejected->[tenant_nameDef] decided against coming to your colony.</li>
            </rulesStrings>
        </questContentRules>
        <root Class="QuestNode_Sequence">
            <nodes>
                <li Class="QuestNode_SubScript">
                    <def>TenancySetup</def>
                </li>
                <li Class="QuestNode_SubScript">
                    <def>TenancyTimer</def>
                </li>
                <li Class="QuestNode_SubScript">
                    <def>TenancyEnds</def>
                </li>
            </nodes>
        </root>
    </QuestScriptDef>
</Defs>